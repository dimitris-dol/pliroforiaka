package com.example.Networks;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RestController;

@RestController
@CrossOrigin
@RequestMapping(path="/provider") // This means URL's start with /demo (after Application path)
public class ProviderController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private ProviderRepository providerRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewProvider (@RequestParam String name , @RequestParam String tin, @RequestParam String service
			, @RequestParam String area , @RequestParam String type) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Provider n = new Provider();
		n.setName(name);
		n.setTin(tin);
		n.setService(service);
		n.setArea(area);
		n.setType(type);
		providerRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Provider> getAllProviders() {
		// This returns a JSON or XML with the users
		return providerRepository.findAll();
	}
}
