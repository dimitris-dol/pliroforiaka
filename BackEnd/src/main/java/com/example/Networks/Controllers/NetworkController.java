package com.example.Networks;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RestController;

@Controller
@CrossOrigin
@RequestMapping(path="/netwrk") // This means URL's start with /demo (after Application path)
public class NetworkController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NetworkRepository networkRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewNetwork (@RequestParam String type ,  @RequestParam String desc , @RequestParam String material , @RequestParam String tech , @RequestParam String owner ,
                                            @RequestParam String admin) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Network n = new Network();
        n.setType(type);
        n.setShortdesc(desc);
        n.setMaterial(material);
        n.setTech(tech);
        n.setOwner(owner);
        n.setAdmin(admin);
        networkRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Network> getAllNetworks() {
        // This returns a JSON or XML with the users
        return networkRepository.findAll();
    }
}
